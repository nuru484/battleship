{"version":3,"file":"app.bundle.js","mappings":"mBA0CA,MAAMA,EAAQ,IAFd,QAIMC,EAAS,IA3Cf,MACE,WAAAC,CAAYC,EAAQC,GAClBC,KAAKF,OAASA,EACdE,KAAKD,SAAWA,CAClB,CAEA,GAAAE,GACOD,KAAKE,UACRF,KAAKD,UAET,CAEA,MAAAG,GACE,OAAIF,KAAKD,WAAaC,KAAKF,MAI7B,GA0BsB,EAAG,GAE3BH,EAAMQ,UAAUP,EAAQ,EAAG,GAE3BD,EAAMS,cAAc,EAAG,GACvBT,EAAMS,cAAc,EAAG,GACvBT,EAAMS,cAAc,EAAG,GACvBT,EAAMS,cAAc,EAAG,GACvBT,EAAMS,cAAc,EAAG,GAEvBT,EAAMU,U","sources":["webpack://battleship/./src/js-files/app-logic.js"],"sourcesContent":["// Ship class\nclass Ship {\n  constructor(length, hitTimes) {\n    this.length = length;\n    this.hitTimes = hitTimes;\n  }\n\n  hit() {\n    if (!this.isSunk()) {\n      this.hitTimes++;\n    }\n  }\n\n  isSunk() {\n    if (this.hitTimes === this.length) {\n      return true;\n    }\n    return false;\n  }\n}\n\n// Gameboard grid function\nconst gameboardGrid = (rows, columns) => {\n  let grid = [];\n  let value = 0;\n\n  // Two dimensional array\n  for (let i = 0; i < rows; i++) {\n    grid[i] = [];\n    for (let j = 0; j < columns; j++) {\n      grid[i][j] = value++;\n    }\n  }\n  console.table(grid);\n  console.log(grid.length);\n\n  return grid;\n};\n\n// Gameboard class\nclass Gameboard {}\n\nconst start = new Gameboard();\n\nconst myShip = new Ship(5, 0);\n\nstart.placeShip(myShip, 2, 3);\n\nstart.receiveAttack(2, 3);\nstart.receiveAttack(2, 4);\nstart.receiveAttack(2, 5);\nstart.receiveAttack(2, 6);\nstart.receiveAttack(2, 7);\n\nstart.gameOver();\n\nexport { Ship, Gameboard };\n"],"names":["start","myShip","constructor","length","hitTimes","this","hit","isSunk","placeShip","receiveAttack","gameOver"],"sourceRoot":""}