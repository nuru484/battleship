(()=>{"use strict";class t{constructor(t,i){this.length=t,this.hitTimes=i}hit(){this.isSunk()||(this.hitTimes+=1)}isSunk(){return this.hitTimes===this.length}}class i{constructor(){this.gameGrid=((t,i)=>{const e=[];let s=0;for(let t=0;t<10;t++){e[t]=[];for(let i=0;i<10;i++)e[t][i]=s++}return e})(),this.ships=[]}placeShip(t,i,e){if(i>=0&&i<this.gameGrid.length&&e>=0&&e<this.gameGrid.length){for(let s=0;s<t.length;s++)if(null===this.gameGrid[i][e+s]||"ship"===this.gameGrid[i][e+s])return;if(e+t.length<=this.gameGrid[i].length){t.startRow=i,t.startColumn=e;for(let s=0;s<t.length;s++)this.gameGrid[i][e+s]="ship";this.ships.push(t)}}}receiveAttack(t,i){if(t>=0&&t<this.gameGrid.length&&i>=0&&i<this.gameGrid[0].length)if("ship"===this.gameGrid[t][i]){const e=this.ships.find((e=>t===e.startRow&&i>=e.startColumn&&i<e.startColumn+e.length));if(e)return e.hit(),void(this.gameGrid[t][i]="hit")}else if("hit"===this.gameGrid[t][i]||"missed"===this.gameGrid[t][i])return;"number"==typeof this.gameGrid[t][i]&&(this.gameGrid[t][i]="missed")}gameOver(){if(this.ships.every((t=>t.isSunk())))return"Game Over"}}class e{constructor(){this.gameboard=null}startGame(){this.gameboard=new i}createShip(i,e){return new t(i,e)}placeShip(t,i,e){this.gameboard&&this.gameboard.placeShip(t,i,e)}attack(t,i,e){t.gameboard.receiveAttack(i,e)}}const s=new e;s.startGame();const a=s.createShip(5,0);s.placeShip(a,2,3);const h=new e;h.startGame();const r=h.createShip(5,0);h.placeShip(r,3,3),h.attack(s,2,3),h.attack(s,2,4),h.attack(s,2,5),h.attack(s,2,6),h.attack(s,2,7),h.attack(s,2,7),h.attack(s,3,6)})();
//# sourceMappingURL=app.bundle.js.map